apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: code-server
  name: code-server
  namespace: code-server
spec:
  selector:
    matchLabels:
      app: code-server
  serviceName: code-server
  replicas: 1
  template:
    metadata:
      labels:
        app: code-server
    spec:
      serviceAccount: dev-env-server
      initContainers:
      - image: quay.io/fakod/create-kubeconfig
        name: create-kubeconfig
        securityContext:
          runAsUser: 1000
        volumeMounts:
        - name: kube-config
          mountPath: /kube
      - image: busybox:1
        name: configure
        args:
        - /bin/sh
        - -c
        - cp /ssh/* /coder/.ssh/ ; chmod 0600 /coder/.ssh/id_rsa
        securityContext:
          runAsUser: 1000
        volumeMounts:
        - name: ssh-key-volume
          mountPath: /ssh
        - name: ssh-folder
          mountPath: /coder/.ssh/
      containers:
      - image: docker:19-dind
        name: docker-daemon
        env:
        - name: DOCKER_TLS_CERTDIR
          value:
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-storage
          mountPath: /var/lib/docker
      - image: quay.io/fakod/dev-env-server
        command:
        - /bin/sh
        - -c
        - "sudo chown coder ~/project; sudo chown coder ~/.local; exec dumb-init code-server --allow-http --no-auth"
        name: code-server
        ports:
        - containerPort: 8443
          name: http
        volumeMounts:
        - name: code-server-storage
          mountPath: /home/coder/project
        - name: code-server-config
          mountPath: /home/coder/.local
        - name: kube-config
          mountPath: /home/coder/.kube
        - name: ssh-folder
          mountPath: /home/coder/.ssh/
      volumes:
      - name: kube-config
        emptyDir: {}
      - name: ssh-folder
        emptyDir: {}
      - name: ssh-key-volume
        secret:
          secretName: code-ssh
  volumeClaimTemplates:
  - metadata:
      name: code-server-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
  - metadata:
      name: code-server-config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Mi
  - metadata:
      name: docker-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
      